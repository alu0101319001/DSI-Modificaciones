{"/home/usuario/mod/DSI-Modificaciones/src/mod1.ts":{"path":"/home/usuario/mod/DSI-Modificaciones/src/mod1.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":32}},"3":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"4":{"start":{"line":14,"column":12},"end":{"line":14,"column":56}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":39}},"6":{"start":{"line":23,"column":8},"end":{"line":23,"column":46}},"7":{"start":{"line":29,"column":8},"end":{"line":29,"column":47}},"8":{"start":{"line":36,"column":8},"end":{"line":36,"column":48}},"9":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"10":{"start":{"line":51,"column":8},"end":{"line":51,"column":46}},"11":{"start":{"line":52,"column":8},"end":{"line":60,"column":9}},"12":{"start":{"line":53,"column":27},"end":{"line":53,"column":28}},"13":{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},"14":{"start":{"line":55,"column":16},"end":{"line":57,"column":17}},"15":{"start":{"line":56,"column":20},"end":{"line":56,"column":63}},"16":{"start":{"line":58,"column":16},"end":{"line":58,"column":27}},"17":{"start":{"line":61,"column":8},"end":{"line":61,"column":72}},"18":{"start":{"line":70,"column":8},"end":{"line":70,"column":46}},"19":{"start":{"line":71,"column":8},"end":{"line":78,"column":9}},"20":{"start":{"line":73,"column":12},"end":{"line":77,"column":13}},"21":{"start":{"line":73,"column":25},"end":{"line":73,"column":26}},"22":{"start":{"line":74,"column":16},"end":{"line":76,"column":17}},"23":{"start":{"line":75,"column":20},"end":{"line":75,"column":56}},"24":{"start":{"line":79,"column":8},"end":{"line":79,"column":72}},"25":{"start":{"line":86,"column":8},"end":{"line":86,"column":55}},"26":{"start":{"line":94,"column":21},"end":{"line":94,"column":25}},"27":{"start":{"line":95,"column":8},"end":{"line":99,"column":9}},"28":{"start":{"line":95,"column":21},"end":{"line":95,"column":22}},"29":{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},"30":{"start":{"line":97,"column":16},"end":{"line":97,"column":31}},"31":{"start":{"line":100,"column":8},"end":{"line":100,"column":22}},"32":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"33":{"start":{"line":109,"column":12},"end":{"line":109,"column":24}},"34":{"start":{"line":111,"column":8},"end":{"line":111,"column":21}},"35":{"start":{"line":114,"column":0},"end":{"line":114,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":7,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":28},"end":{"line":17,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":16},"end":{"line":24,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":30,"column":5}},"line":28},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":18},"end":{"line":37,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":22},"end":{"line":44,"column":5}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":19},"end":{"line":62,"column":5}},"line":50},"7":{"name":"(anonymous_7)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":22},"end":{"line":80,"column":5}},"line":69},"8":{"name":"(anonymous_8)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":24},"end":{"line":87,"column":5}},"line":85},"9":{"name":"(anonymous_9)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":17},"end":{"line":101,"column":5}},"line":93},"10":{"name":"(anonymous_10)","decl":{"start":{"line":107,"column":4},"end":{"line":107,"column":5}},"loc":{"start":{"line":107,"column":20},"end":{"line":112,"column":5}},"line":107}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{"line":13,"column":8},"end":{"line":15,"column":9}}],"line":13},"1":{"loc":{"start":{"line":52,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":60,"column":9}},{"start":{"line":52,"column":8},"end":{"line":60,"column":9}}],"line":52},"2":{"loc":{"start":{"line":55,"column":16},"end":{"line":57,"column":17}},"type":"if","locations":[{"start":{"line":55,"column":16},"end":{"line":57,"column":17}},{"start":{"line":55,"column":16},"end":{"line":57,"column":17}}],"line":55},"3":{"loc":{"start":{"line":71,"column":8},"end":{"line":78,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":78,"column":9}},{"start":{"line":71,"column":8},"end":{"line":78,"column":9}}],"line":71},"4":{"loc":{"start":{"line":71,"column":12},"end":{"line":72,"column":51}},"type":"binary-expr","locations":[{"start":{"line":71,"column":13},"end":{"line":71,"column":50}},{"start":{"line":72,"column":13},"end":{"line":72,"column":50}}],"line":71},"5":{"loc":{"start":{"line":74,"column":16},"end":{"line":76,"column":17}},"type":"if","locations":[{"start":{"line":74,"column":16},"end":{"line":76,"column":17}},{"start":{"line":74,"column":16},"end":{"line":76,"column":17}}],"line":74},"6":{"loc":{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},"type":"if","locations":[{"start":{"line":96,"column":12},"end":{"line":98,"column":13}},{"start":{"line":96,"column":12},"end":{"line":98,"column":13}}],"line":96},"7":{"loc":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},{"start":{"line":108,"column":8},"end":{"line":110,"column":9}}],"line":108}},"s":{"0":1,"1":1,"2":1,"3":5,"4":1,"5":5,"6":4,"7":4,"8":13,"9":11,"10":2,"11":2,"12":1,"13":1,"14":10,"15":5,"16":10,"17":2,"18":2,"19":2,"20":1,"21":1,"22":27,"23":8,"24":2,"25":1,"26":37,"27":37,"28":37,"29":81,"30":33,"31":37,"32":5,"33":3,"34":2,"35":1},"f":{"0":1,"1":5,"2":4,"3":4,"4":13,"5":11,"6":2,"7":2,"8":1,"9":37,"10":5},"b":{"0":[1,4],"1":[1,1],"2":[5,5],"3":[1,1],"4":[2,1],"5":[8,19],"6":[33,48],"7":[3,2]},"inputSourceMap":{"version":3,"file":"/home/usuario/mod/DSI-Modificaciones/src/mod1.ts","sources":["/home/usuario/mod/DSI-Modificaciones/src/mod1.ts"],"names":[],"mappings":"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","sourcesContent":["export class PrimeNumber implements Iterable<number> {\n  private primes: Set<number>;\n\n  private static primeNumber: PrimeNumber;\n\n  private constructor() {\n\t  this.primes = new Set<number>();\n  }\n\n\t/**\n\t * Generate a single instance of PrimeNumber\n\t * @returns The instance of PrimeNUmber\n\t */\n  public static getPrimeNumber(): PrimeNumber {\n    if (!PrimeNumber.primeNumber) {\n      PrimeNumber.primeNumber = new PrimeNumber();\n    }\n    return PrimeNumber.primeNumber;\n  }\n\n\t/**\n\t * \n\t * @returns The set of the instance PrimeNumber\n\t */\n  getPrimes(): Set<number> {\n    return PrimeNumber.primeNumber.primes;\n  }\n\n\t/**\n\t * Clear the set\n\t */\n\tprivate resetPrimes() {\n\t\tPrimeNumber.primeNumber.primes.clear();\n\t}\n\n\t/**\n\t * Add a new number to the set\n\t * @param num\n\t */\n\tprivate addPrime(num: number) {\n\t\tPrimeNumber.primeNumber.primes.add(num);\n\t}\n\n\t/**\n\t * Get the size of the set\n\t * @returns\n\t */\n\tgetPrimesLenght(): number {\n\t\treturn PrimeNumber.primeNumber.primes.size;\n\t}\n\n\t/**\n\t * Get the first n prime numbers\n\t * @param n\n\t * @returns \n\t */\n\tfirstPrimes(n: number): number[] {\n\t\tPrimeNumber.primeNumber.resetPrimes();\n\t\tif (PrimeNumber.primeNumber.validInput(n)) {\n\t\t\tlet checkNum: number = 2;\n\t\t\twhile (n !== PrimeNumber.primeNumber.getPrimesLenght()) {\n\t\t\t\tif (PrimeNumber.primeNumber.isPrime(checkNum)) {\n\t\t\t\t\tPrimeNumber.primeNumber.addPrime(checkNum);\n\t\t\t\t}\n\t\t\t\tcheckNum++;\n\t\t\t}\n\t\t}\n\t\treturn Array.from(PrimeNumber.primeNumber.getPrimes().values());\n\t}\n\n\t/**\n\t * Get the prime numbers in the range [n, m]\n\t * @param n\n\t * @param m \n\t * @returns \n\t */\n\trangePrimes(n: number, m: number): number[] {\n\t\tPrimeNumber.primeNumber.resetPrimes();\n\t\tif ((PrimeNumber.primeNumber.validInput(n)) &&\n\t\t(PrimeNumber.primeNumber.validInput(m))) {\n\t\t\tfor (let i = n; i <= m; i++) {\n\t\t\t\tif (PrimeNumber.primeNumber.isPrime(i)) {\n\t\t\t\t\tPrimeNumber.primeNumber.addPrime(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Array.from(PrimeNumber.primeNumber.getPrimes().values());\n\t}\n\n\t/**\n\t * Do the class PrimeNumber Iterable\n\t * @returns\n\t */\n\t[Symbol.iterator](): Iterator<number> {\n\t\treturn PrimeNumber.primeNumber.primes.values();\n\t}\n\n\t/**\n\t * Check if a number is prime\n\t * @param num\n\t * @returns\n\t */\n\tprivate isPrime(num: number): boolean {\n\t\tlet result: boolean = true;\n\t\tfor (let j = 2; j <= Math.sqrt(num); j++) {\n\t\t\tif (num % j === 0) {\n\t\t\t\tresult = false;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Check if the input is valid\n\t * @param num\n\t * @returns\n\t */\n\tprivate validInput(num: number): boolean {\n\t\tif (num > 0) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b631d782552187183e5f2484c5828bd976c1b89c","contentHash":"8a68c69b7b5f2bdfa3459e4287cc7ae99b58402efa8843b2559a40e400abe25b"}}